PARSER_BEGIN(Lugosi)
import java.io.*;
public class Lugosi {

  public static void main(String args[]) throws ParseException,IOException {
    
 Lugosi analisador = new Lugosi(new FileInputStream(args[0]));
 analisador.Lugosi();
  }

}

PARSER_END(Lugosi)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main">
| <ACHAVES: "{">
| <FCHAVES: "}">
| <VOID: "void">
| <LET: "let">
| <SEMICOLON: ";">
| <TYPE_FLOAT: "float">
| <TYPE_BOOL: "bool">
| <ASSINGMENT: ":=">
| <OPEN_PARENTHESIS: "(">
| <CLOSE_PARENTHESIS: ")">
| <IF: "if">
| <WHILE: "while">
| <DO: "do">
| <READIO: "readIO">
| <RETURN: "return">
| <PRINTIO: "printIO">
| <TRUE: "true">
| <FALSE: "false">
| <OP_PLUS: "+">
| <OP_MINUS: "-">
| <OP_MULTIPLICATION: "*">
| <OP_DIVISION: "/">
| <OP_LOGIC_AND: "&&">
| <OP_LOGIC_OR: "||">
| <COMPARISON_LESS_THAN: "<">
| <COMPARISON_GREATER_THAN: ">">
| <COMPARISON_EQUALS: "==">
| <COMMA: ",">
| <DEF: "def">
}

TOKEN :
{
  <NUM : (["0"-"9"])+ ("."(["0"-"9"])+)? ("E"("+" | "-")? (["0"-"9"])+)?>
 |< ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])* ( ["a"-"z","A"-"Z","0"-"9", "_"])*>
}



void Lugosi () :
{Token t;}
{

(
  <MAIN> { System.out.println("Palavra reservada: main");}
| <ACHAVES> { System.out.println("Abre chaves: {");}
| <FCHAVES> { System.out.println("Fecha chaves: }");}
| <VOID> { System.out.println("Palavra reservada: void");}  
| t=<NUM> { System.out.println("Número: "+ t.image);}
| t=<ID> { System.out.println("Identificador: "+ t.image);}
| <LET> { System.out.println("Palavra reservada let"); }
| <SEMICOLON> { System.out.println("Delimitador de comando: ;"); }
| <TYPE_FLOAT> { System.out.println("Palavra reservada: float"); }
| <TYPE_BOOL> {System.out.println("Palavra reservada: bool"); }
| <ASSINGMENT> {System.out.println("Atribuição: :=");}
| <OPEN_PARENTHESIS>  {System.out.println("Abre parenteses: (");}
| <CLOSE_PARENTHESIS>  {System.out.println("Fecha parenteses: )");}
| <IF> {System.out.println("Palavra reservada: if");}
| <WHILE> {System.out.println("Palavra reservada: while");}
| <DO> {System.out.println("Palavra reservada: do");}
| <READIO>  {System.out.println("Palavra reservada: readIO");}
| <RETURN> {System.out.println("Palavra reservada: return");}
| <PRINTIO> {System.out.println("Palavra reservada: printIO");}
| <TRUE> {System.out.println("Palavra reservada: true");}
| <FALSE>  {System.out.println("Palavra reservada: false");}
| <OP_PLUS>  {System.out.println("Operador: +");}
| <OP_MINUS>  {System.out.println("Operador: -");}
| <OP_MULTIPLICATION>  {System.out.println("Operador: *");}
| <OP_DIVISION>  {System.out.println("Operador: /");}
| <OP_LOGIC_AND>  {System.out.println("Operador: &&");}
| <OP_LOGIC_OR>  {System.out.println("Operador: ||");}
| <COMPARISON_LESS_THAN>  {System.out.println("Operador: <");}
| <COMPARISON_GREATER_THAN>  {System.out.println("Operador: >");}
| <COMPARISON_EQUALS>  {System.out.println("Operador: ==");}
| <COMMA>  {System.out.println("Palavra reservada: ,");}
| <DEF> {System.out.println("Palavra reservada: ,");}
)*
<EOF> 
}





